name: Deploy Infrastructure
on:
  push:
    branches: [master]

jobs:

  tf_fmt:
    name: Deploy Site
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash
        working-directory: ./flask

    steps:
     - name: Checkout Repo
       uses: actions/checkout@v1

     - name: Setup Terraform
       uses: hashicorp/setup-terraform@v1
       with:
         terraform_version: 1.1.7

     
     - name: Terraform Init
       env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
         AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY_ID }}
         AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}
       working-directory: ./flask/terraform_files    
       run: terraform init -upgrade

     - name: Terraform validate
       env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
         AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY_ID }}
         AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}
       working-directory: ./flask/terraform_files    
       run: terraform validate

     - name: Terraform apply
       env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
         AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY_ID }}
         AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}
       working-directory: ./flask/terraform_files
       run: terraform apply -auto-approve

     - name: Configure AWS credentials
       uses: aws-actions/configure-aws-credentials@v1
       with:
         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
         aws-region: eu-north-1

     - name: Login to Amazon ECR
       id: login-ecr
       uses: aws-actions/amazon-ecr-login@v1

     - name: Build, tag, and push image to Amazon ECR
       env:
         ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
         ECR_REPOSITORY: nordcloud
         IMAGE_TAG: nord_cloud
       working-directory: ./flask/docker_image   
       run: |
         docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
         docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

       
     - name: Install kubectl
       uses: azure/setup-kubectl@v1
       with:
         version: 'v1.21.3'
       id: install
     
     - name: Update kube config
       run: aws eks update-kubeconfig --name nord-cloud-cluster --region eu-north-1

     - name: Deploy image to Amazon EKS
       working-directory: ./flask/kubectl_files
       run: |
         kubectl apply -f deployment.yaml
